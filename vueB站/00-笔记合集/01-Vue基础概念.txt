学习/编码过程记录
说明：部分是资料内容，部分是自己的话语，暂未做区分
    内容来自官网
什么是api？
    就是一个能完成某个功能的机器，比如：存钱API，你把钱给它，他存好，然后告诉你存好了。
    你不需要知道他怎么存的，只需要知道结果就可以了。
    一个API的组成：
     Protocol （协议）：规定了各部分之间如何进行信息交互的规则和步骤

    Interface（接口）：我认为在API里的接口可以看做是一个接待窗口，对各个软件组件开放，他们可以通过接口来实现与其他组件的信息交互。

    Format（格式）：要进行信息交互，我们又意识到交互双方语言必须相同呀，对吧。所以又引出了另一个概念
    格式（format） ，在程序员的世界里，通用的格式包含XML和JSON。

    这时我们假设：银行现在想要扩展业务到股市，那么小娜自然无法胜任这个工作，这时候我们呢就需要另一位接待员来
    处理股票的相关业务了，这时，小冰就登场啦！
    在API术语里，API端点通常是指一个接口中提供特定功能的子集的服务提供者，所以小娜和小冰都是端点，而柜台就是接口，不同的端点可以有不同的协议和不同的格式。

1，介绍一下vue？了解vue
    JavaScript框架
    组件化、高效开发用户界面
    声明式渲染/响应：模板语法，通过模板语法连接html与js，使js中的数据是什么就显示什么
    渐进式框架？可以以不同的方式使用vue框架
        无需构建步骤，渐进式增强静态的 HTML
        在任何页面中作为 Web Components 嵌入
        单页应用 (SPA)
        全栈 / 服务端渲染 (SSR)
        Jamstack / 静态站点生成 (SSG)
        开发桌面端、移动端、WebGL，甚至是命令行终端中的界面
    单文件组件
        一个vue文件就是一个组件，里面包含了html、css、js
    书写组件的风格
        "我们可以用包含多个选项的对象来描述组件的逻辑，例如 data、methods 和 mounted。
        选项所定义的属性都会暴露在函数内部的 this 上，它会指向当前的组件实例。"
        选项式、组合式：一个写在对象中，一个写在script中
        "选项式 API 是在组合式 API 的基础上实现的！"
        "当你不需要使用构建工具，或者打算主要在低复杂度的场景中使用 Vue，例如渐进增强的应用场景，推荐采用选项式 API。
         当你打算用 Vue 构建完整的单页应用，推荐采用组合式 API + 单文件组件。"
    vue需要安装node
2，如何搭建vue单页面应用
    基于vite构建，vite：构建工具
    1，安装脚手架
        npm init vue@latest
    2，安装依赖
        npm install
    3，启动开发服务器
        npm run dev
    4，发布到生产环境
        npm run build（此命令会在 ./dist 文件夹中为你的应用创建一个生产环境的构建版本）
3，使用vue的方式
    1，通过cdn使用vue，全局构建，无法使用单文件组件语法
        该版本的所有顶层 API 都以属性的形式暴露在了全局的 Vue 对象上
        <script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>
    2，使用ES模块构建版本
        该案例中没有使用templete标签？
    3，通过导入映射表告诉浏览器如何如何定位到导入的vue
4，一个组件如何放在html页面中并显示出来？
5，拆分模块：不懂
6,vue特性
    解耦视图和数据
    可复用的组件
    前端路由数据
    状态管理
    虚拟dom
    渐进式
    一点点对项目进行重构，将vue作为应用的一部分嵌入
    也可以用vue的全家桶，来开发大型项目
7，下载代码注意事项
    branch：选择版本，不要选择默认dev，默认为开发测试版本。

